"def get_tensor_type": "    def get_tensor_type(self, shape: tuple[int, ...], element_type: DataType) -> DataType:"
"def make_get_element_expr": "def make_get_element_expr(arg0: Expr, arg1: tuple[int, ...], arg2: DebugInfo) -> Expr:"
"def create_function": "    def create_function(self, arg0: ...) -> Function:"
"def make_const_expr_bool": "def make_const_expr_bool(arg0: DataType, arg1: bool | np.bool_) -> Expr:"
"def make_const_expr_fp": "def make_const_expr_fp(arg0: DataType, arg1: float | np.floating) -> Expr:"
"def make_const_expr_int": "def make_const_expr_int(arg0: DataType, arg1: int | np.int32 | np.int64) -> Expr:"
"def create_kernel": "    def create_kernel(self, arg0: typing.Callable[[...], None], arg1: str, arg2: AutodiffMode) -> Kernel:"
"def make_launch_context": "    def make_launch_context(self) -> KernelLaunchContext:"
"def set_arg_ndarray": "    def set_arg_ndarray(self, arg0: tuple[int, ...], arg1: Ndarray) -> None:"
